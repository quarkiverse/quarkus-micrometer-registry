<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.quarkiverse.micrometer.registry</groupId>
        <artifactId>quarkus-micrometer-registry-parent</artifactId>
        <version>199-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>quarkus-micrometer-registry-docs</artifactId>
    <name>Quarkus Micrometer Registry - Documentation</name>

    <properties>
        <asciidoctorj.version>2.5.1</asciidoctorj.version>
        <asciidoctor-maven-plugin.version>2.2.0</asciidoctor-maven-plugin.version>
        <yaml-properties-maven-plugin.version>1.1.3</yaml-properties-maven-plugin.version>
    </properties>

    <dependencies>
        <!-- Make sure the doc is built after the other artifacts -->
        <dependency>
            <groupId>io.quarkiverse.micrometer.registry</groupId>
            <artifactId>quarkus-micrometer-registry-azure-monitor</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.micrometer.registry</groupId>
            <artifactId>quarkus-micrometer-registry-datadog</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.micrometer.registry</groupId>
            <artifactId>quarkus-micrometer-registry-jmx</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.micrometer.registry</groupId>
            <artifactId>quarkus-micrometer-registry-newrelic</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.micrometer.registry</groupId>
            <artifactId>quarkus-micrometer-registry-signalfx</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.micrometer.registry</groupId>
            <artifactId>quarkus-micrometer-registry-stackdriver</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.micrometer.registry</groupId>
            <artifactId>quarkus-micrometer-registry-statsd</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
    
        <plugins>
            <plugin>
                <groupId>it.ozimov</groupId>
                <artifactId>yaml-properties-maven-plugin</artifactId>
                <version>${yaml-properties-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${project.basedir}/../.github/project.yml</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Copy generated config documents-->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/modules/ROOT/pages/includes/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/../target/asciidoc/generated/config/</directory>
                                    <include>quarkus-micrometer-export-*.adoc</include>
                                    <filtering>false</filtering>
                                </resource>
                                <resource>
                                    <directory>${project.basedir}/templates/includes</directory>
                                    <include>attributes.adoc</include>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-images</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/generated-docs/_images/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/modules/ROOT/assets/images/</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor-maven-plugin.version}</version>
                <configuration>
                    <skip>${skipDocs}</skip>
                    <enableVerbose>true</enableVerbose>
                    <logHandler>
                        <failIf>
                          <severity>WARN</severity>
                        </failIf>
                    </logHandler>
                    <sourceDirectory>${project.basedir}/modules/ROOT/pages/</sourceDirectory>
                    <preserveDirectories>true</preserveDirectories>
                    <attributes>
                        <icons>font</icons>
                        <!-- Antora images path -->
                        <imagesdir>./_images/</imagesdir>
                        <sectanchors>true</sectanchors>
                        <!-- set the idprefix to blank -->
                        <idprefix />
                        <idseparator>-</idseparator>
                        <docinfo1>true</docinfo1>
                        <!-- avoid content security policy violations -->
                        <skip-front-matter>true</skip-front-matter>
                    </attributes>
                </configuration>
                <executions>
                    <execution>
                        <id>output-html</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <skip>${skipDocs}</skip>
                            <backend>html5</backend>
                            <attributes>
                                <source-highlighter>coderay</source-highlighter>
                                <!-- avoid content security policy violations -->
                                <linkcss>true</linkcss>
                                <copycss>true</copycss>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj</artifactId>
                        <version>${asciidoctorj.version}</version>
                    </dependency>
                </dependencies>
            </plugin>


        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native-image</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>

            <properties>
                <quarkus.package.type>native</quarkus.package.type>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>${native.surefire.skip}</skipTests>
                        </configuration>
                    </plugin>

                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <native.image.path>
                                            ${project.build.directory}/${project.build.finalName}-runner
                                        </native.image.path>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
